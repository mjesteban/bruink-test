#!/usr/bin/env php
<?php

declare(strict_types=1);

//require __DIR__.'/vendor/autoload.php';

main();

function getOperators(): array
{
    return [
        '+',
        '-',
        '*',
        '/',
    ];
}

function getMathFunctions(): array
{
    return [
        'sqrt',
    ];
}

function main(): void
{
    $operators = implode(', ', getOperators());
    $mathFunctions = implode(', ', getMathFunctions());

    echo <<<HEREDOC
Welcome to Buink Calculator!

Arithmetic operators allowed: $operators
Math function allowed: $mathFunctions

Type "exit" to quit.

HEREDOC.PHP_EOL;

    while (true) {
        $line = trim((string) readline('calc > '));

        if ($line === 'exit') {
            echo 'Bye!'.PHP_EOL;
            break;
        }

        if (!isValidOperation($line)) {
            continue;
        }

        try {
            eval('echo '.$line.";");
            echo PHP_EOL;
        } catch (Throwable $e) {
            echo 'Error in operation: '.$e->getMessage().PHP_EOL;
        }
    }
}

function isValidOperation(string $line): bool
{
    $tokens = token_get_all('<?php '.$line);
    array_shift($tokens);

    $allowedTokens = [
        T_LNUMBER,
        T_DNUMBER,
        T_WHITESPACE,
        T_POW,
        T_STRING, //for math functions
    ];

    foreach ($tokens as $token) {
        if (is_array($token)) {
            $constant = $token[0];
            $value = $token[1];

            if (!in_array($constant, $allowedTokens, true)) {
                echo 'Invalid input.'.PHP_EOL;
                return false;
            }

            if ($constant === T_POW) {
                if (!in_array($value, getOperators(), true)) {
                    echo 'Invalid operator.'.PHP_EOL;
                    return false;
                }
            }

            if ($constant === T_STRING) {
                if (!in_array($value, getMathFunctions(), true)) {
                    echo 'Invalid math function.'.PHP_EOL;
                    return false;
                }
            }

        } else {
            if (!in_array($token, getOperators(), true)) {
                echo 'Invalid operator.'.PHP_EOL;
                return false;
            }
        }
    }

    return true;
}